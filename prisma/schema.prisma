// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Thread {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  description String
  parent      Thread?  @relation("ThreadParent", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  parentId    String?  @unique @db.ObjectId
  children    Thread[] @relation("ThreadParent")
  messages    Message[]
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName   String
  lastName    String
  nickName    String   @unique
  birthday    DateTime
  password    String
  sended      Message[] @relation("SendedBy")
  created     Message[] @relation("CreatedBy")
}

model Message {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  sender User @relation("SendedBy", fields: [senderId], references: [id])
  senderId String @db.ObjectId
  author User @relation("CreatedBy", fields: [authorId], references: [id])
  authorId String @db.ObjectId
  thread Thread @relation(fields: [threadId], references: [id])
  threadId String @db.ObjectId
  parent Message? @relation("Comments", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  parentId String? @db.ObjectId
  comments Message[] @relation("Comments")
  value String
}